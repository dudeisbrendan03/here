[core]
## Bot presence and identity
nick = mechasqueak-test
## Channels for the bot to join, separated by commas
## If a channel has a password, use "#channel pasword"
## e.g. channels=#public,#private topsecret
# channels = #rattest,#botabuse
host = irc.mibbit.com
use_ssl = true
verify_ssl = False
port = 6697
# auth_method = sasl
# auth_password = topsecret
# auth_username = mechasqueak-test

prefix = \!
help_prefix = !

## Admins
# owner = OwnerNameHere
# admins = Joe,Bob

## Where to find modules
extra = sopel-modules

## For production/testing
enable = admin,help,rat-board,rat-facts,rat-search,rat-autocorrect
## Development use, which may add security risks
# enable = admin,help,rat-board,rat-facts,rat-search,rat-autocorrect,reload,ipython

db_filename = run/ratbot.db
logdir = logs
verbose = verbose
log_raw = True


[ratbot]
## Common configuration to all rat modules.
# If running sopel in a read-only location, make sure it has write access to workdir
workdir = run

# Database connection string.  See SQLAlchemy documentation.
database = postgresql://username:password@localhost/databasename

## Configuration file for Alembic (used for database schema creation and upgrades)
alembic = alembic.ini

## Uncomment this to make SQLAlchemy echo lots of queries.
# debug_sql = true

## API Selection.
# If no API URL is defined, Mecha will operate in offline mode.
## Development API
apiurl = http://dev.api.fuelrats.com
## Production API
# apiurl = http://api.fuelrats.com

## API Auth Token.
# Previously generated Oauth2 Token to authorize API Calls
# apitoken = longassthing

## Set this to log API calls.  The path must exist (but the file does not need to), file will be overwritten at startup.
## If this is 'stdout' or 'stderr', logs to stdout/stderr instead.
# apidebug = logs/api.log

# URL to use to retrieve starsystem data.
edsm_url = http://edsm.net/api-v1/systems?coords=1

# If starsystem data is older than this (in seconds), !sysrefresh can refresh it.
edsm_maxage = 43200

# Check to see if the starsystem data needs to be refreshed every N seconds.  This can be set to a smaller number than
# edsm_maxage to do things like "check if refresh is needed every 4 hours, but only actually refresh every 12", e.g. to
# allow retries in the event one attempt fails.  Set to 0 to disable
edsm_autorefresh = 14400

## Ratbot will try to determine its version number on startup for some informational commands.
## It will do so by trying the following, in order:
## - Read the version_string setting
## - Read the first line of version_file
## - Execute version_cmd and read the first line of its stdout.  This is interpreted using the shell.
## - Execute git describe --tags --long --always from one of its source directories.  The path to git can be changed
##   with 'version_git'
## The default behavior is usually fine, but uncomment one of these if you wish to change it
#version_string = some-magical-version
#version_file = version.txt
#version_cmd = get_version.sh
#version_git = /usr/bin/git


[ratfacts]
## Filename or directory that will be searched for facts to add to the database on startup.
## This will not override existing facts.
filename = facts

## Language search order for facts with no language or where the specified language is not found
## Comma-separated list
lang = en


[ratboard]
# Set the pattern that much be matched in order to trigger a ratsignal.  This follows normal regular expression syntax
# The actual pattern be (?!PREFIX).*SIGNAL.*, where PREFIX is the command prefix and PATTERN is the value here.
# (In other words, SIGNAL can be anywhere in the text, and the text must not begin with the command prefix)
# Default: ratsignal
# Use drillsignal for drillsqueak, testsignal for debugging
signal = ratsignal
